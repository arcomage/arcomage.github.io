(self.webpackChunkarcomage_hd=self.webpackChunkarcomage_hd||[]).push([[793],{4998:(e,a,n)=>{"use strict";n.d(a,{Z:()=>M});var r=n(4454),o=n(3211),s=n(6008),t=n(3825),i=n(5623),l=n(1757),c=n(1159),d=n(6353),m=n(8170);var p=n(5709),u=n(6559),y=n(583),g=n(1304);var f=n(5022),w=n(1558),h=n(5631),T=n(9129);const D=[-2,-3,-4];var v=n(5078);var b=n(3644);var P=n(7746),k=n(4370);const W=[-2,-3,-4];var z=n(4107);const M=(0,r.l)(((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.g$)),(0,t.M)(a),(0,i.b)((([e,a])=>{const n=e.payload.map((e=>{const{isPlayer:n,statusProp:r,noSound:o}=e;let s=null;if("to"in e){const o=a.status[n?"player":"opponent"][r];e.to!==o&&(s=e.to>o)}else 0!==e.diff&&(s=e.diff>0);return o||(0,c.Z)(r,a.volume,s),Object.assign({increase:s,isPlayer:n,statusProp:r},"to"in e?{to:e.to}:{diff:e.diff})}));return(0,d.z)((0,m.of)({type:o.l7,payload:n}),(0,m.of)({type:o.Qo}),(0,m.of)({type:o.Dt}))})))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.Uk)),(0,t.M)(a),(0,p.U)((([e,a])=>{const n=a.status.player,r=a.status.opponent,s=Object.assign({},n),t=Object.assign({},r),i=y.Z[e.n],l=i.effect;"player"===e.owner?l(s,t):l(t,s);const c=(0,u.qh)(s).filter((([e,a])=>a!==n[e])).map((([e,a])=>({isPlayer:!0,statusProp:e,to:a}))).concat((0,u.qh)(t).filter((([e,a])=>a!==r[e])).map((([e,a])=>({isPlayer:!1,statusProp:e,to:a}))));return c.push({isPlayer:"player"===e.owner,statusProp:g.ag[i.type],diff:-i.cost,noSound:!0}),{type:o.g$,payload:c}})))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.u3)),(0,t.M)(a),(0,i.b)((([a,n])=>{const{n:r,index:s,position:t,owner:i}=a,l=y.Z[r].special;return(0,c.Z)("deal",n.volume),(0,d.z)(n.game.isNewTurn?(0,m.of)({type:o.kH}):h.E,(0,m.of)({type:o.Uk,n:r,owner:i}),(0,m.of)({type:o.PX,index:s}),(0,m.of)({type:o.fj,index:s,position:t,owner:i}),(0,m.of)({type:o.Ut}),(null==l?void 0:l.drawDiscardPlayagain)?(0,d.z)((0,m.of)({type:o.vd}),(0,m.of)({type:o.NX}).pipe((0,f.g)(0)),(0,m.of)({type:o.Jn,index:s}).pipe((0,f.g)(T.Lc+T.N6)),(0,m.of)({type:o.Ut})):(0,d.z)((0,m.of)({type:o.Jn,index:s}).pipe((0,f.g)(T.Lc+T.N6)),(null==l?void 0:l.playagain)?(0,d.z)((0,m.of)({type:o.NX}).pipe((0,f.g)(0)),(0,m.of)({type:o.Ut})):(0,m.of)({type:o.jV,index:s}).pipe((0,f.g)(T.Lc)))).pipe((0,w.R)(e.ofType(o.Wz)))})))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.fL)),(0,t.M)(a),(0,i.b)((([{index:e,position:a,owner:n},r])=>((0,c.Z)("deal",r.volume),(0,d.z)(r.game.isNewTurn?(0,m.of)({type:o.kH}):h.E,(0,m.of)({type:o.iE,index:e}),(0,m.of)({type:o.Jn,index:e}).pipe((0,f.g)(0)),(0,m.of)({type:o.fj,index:e,position:a,owner:n}),r.game.discardMode?(0,d.z)((0,m.of)({type:o.vd}),(0,m.of)({type:o.NX})):(0,d.z)((0,m.of)({type:o.Ut}),(0,m.of)({type:o.jV,index:e}).pipe((0,f.g)(T.Lc))))))))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.Jn)),(0,t.M)(a),(0,i.b)((([e,a])=>{const n=a.cards.list,r=n[e.index];if(null!==r&&!1===D.includes(r.position)){const a=D.findIndex((e=>n.every((a=>(null==a?void 0:a.position)!==e))));return-1===a?(0,d.z)((0,m.of)({type:o.kH}),(0,m.of)({type:o.Jn,index:e.index})):(0,m.of)({type:o._d,index:e.index,toPosition:D[a]})}return h.E})))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.ah)),(0,i.b)((({payload:e})=>(0,d.z)((0,m.of)({type:o.MO,payload:e}),(0,m.of)({type:o.qg})))))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.qg)),(0,t.M)(a),(0,i.b)((([a,n])=>{const r=Math.random()<.5,s=n.settings.cardsInHand,t={total:{player:s,opponent:s},list:[],nextPos:{player:s,opponent:s}};for(let e=0,a=2*s;e<a;e++){const a={position:e%s,n:(0,v.d)(),unusable:!1,discarded:!1,isflipped:!1,owner:e<s?"player":"opponent"};t.list.push(a)}return(0,d.z)((0,m.of)({type:o.zn,payload:t}),(0,m.of)({type:o.s3,playersTurn:r}),(0,m.of)({type:o.F5,payload:n.settings.start}),(0,m.of)({type:o.k4,owner:r?"player":"opponent"}),(0,m.of)({type:o.NX}).pipe((0,f.g)(0))).pipe((0,w.R)(e.ofType(o.Wz)))})))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.NX)),(0,t.M)(a),(0,i.b)((([e,a])=>{const n=(0,v.d)(),r=a.game.playersTurn?"player":"opponent";return(0,c.Z)("deal",a.volume),(0,d.z)((0,m.of)({type:o.$Z,n}),(0,m.of)({type:o.Qo,lastOnly:!0}),(0,m.of)({type:o.B4,position:a.cards.nextPos[r],owner:r}).pipe((0,f.g)(T.Fi)),"opponent"===r&&b.Hz?(0,m.of)({type:o.zL}).pipe((0,f.g)(T.Lc+T.N6+10+(b.Xw?0:5e3))):h.E)})))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.jV)),(0,t.M)(a),(0,i.b)((([a,n])=>(0,d.z)((0,m.of)({type:o.K5}),(0,m.of)({type:o.k4,owner:n.game.playersTurn?"opponent":"player"}),(0,m.of)({type:o.Ut}),(0,m.of)({type:o.NX}).pipe((0,f.g)(0)),(0,m.of)({type:o.Z$})).pipe((0,w.R)(e.ofType(o.Wz))))))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.k4)),(0,t.M)(a),(0,p.U)((([e,a])=>{const n=a.status[e.owner],r=(0,u.qh)(g.cs).map((([a,r])=>({isPlayer:"player"===e.owner,statusProp:r,diff:n[a],noSound:!0})));return{type:o.g$,payload:r}})))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.kH)),(0,t.M)(a),(0,P.zg)((([e,a])=>{const n=[],r=[];return W.forEach((e=>{a.cards.list.forEach(((a,s)=>{null!==a&&a.position===e&&(n.push((0,m.of)({type:o.EK,index:s})),r.push((0,m.of)({type:o.M2,index:s}).pipe((0,f.g)(2*T.Lc))))}))})),(0,d.z)((0,m.of)({type:o.Z$}),(0,k.T)(...n,...r))})))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.Qo)),(0,t.M)(a),(0,p.U)((([e,a])=>{const n=[],r=[],s=(o,s)=>{if(null!==o){const t=e.lastOnly?a.game.playersTurn?"player":"opponent":o.owner;if("common"!==t){const{type:e,cost:i}=y.Z[o.n];a.status[t][g.ag[e]]<i?o.unusable||n.push(s):o.unusable&&r.push(s)}}};if(e.lastOnly){const e=a.cards.list,n=e.length-1;s(e[n],n)}else a.cards.list.forEach(s);return{type:o.R9,unusables:n,usables:r}})))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.Dt)),(0,t.M)(a),(0,i.b)((([e,a])=>{const{tower:n,resource:r}=a.settings.win,{player:s,opponent:t}=a.status,i=s.tower>=n||t.tower<=0||g.ag.some((e=>s[e]>=r)),l=t.tower>=n||s.tower<=0||g.ag.some((e=>t[e]>=r));return i&&!l?(0,m.of)({type:o.Wz,kind:1}):!i&&l?(0,m.of)({type:o.Wz,kind:-1}):i&&l?(0,m.of)({type:o.Wz,kind:0}):h.E})))),((e,a)=>e.pipe((0,s.h)((0,l.isOfType)(o.zL)),(0,t.M)(a),(0,i.b)((([e,a])=>{const{index:n,use:r}=(0,z.ai)(a),s=a.cards.list[n];if(null!==s){const{n:e,position:a,owner:t}=s;return r?(0,m.of)({type:o.u3,index:n,n:e,position:a,owner:t}):(0,m.of)({type:o.fL,index:n,position:a,owner:t})}return h.E})))))},4983:(e,a,n)=>{"use strict";n.r(a),n.d(a,{I18nContext:()=>c,I18nProvider:()=>m,upper1st:()=>p});var r=n(7294),o=n(4378),s=n(7584),t=n(8199),i=n(6360);const l={i18n:o.i18n,cards:s.cardsI18n},c=(0,r.createContext)({i18n:()=>"",cards:()=>""}),d={[t.defaultLang]:l},m=({children:e})=>{const[a,o]=(0,r.useState)(d),s=(0,i.C)((e=>e.lang.code));return(0,r.useEffect)((()=>{var e,r,t,i;a[s]||(o(Object.assign(Object.assign({},a),{[s]:null})),e=void 0,r=void 0,i=function*(){const[{i18n:e},{cardsI18n:r}]=yield Promise.all([n(2282)(`./${s}`),n(1838)(`./cards.${s}`)]);o(Object.assign(Object.assign({},a),{[s]:{i18n:e,cards:r}}))},new((t=void 0)||(t=Promise))((function(a,n){function o(e){try{l(i.next(e))}catch(e){n(e)}}function s(e){try{l(i.throw(e))}catch(e){n(e)}}function l(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(o,s)}l((i=i.apply(e,r||[])).next())})))}),[s]),r.createElement(c.Provider,{value:{i18n:e=>{var n,r,o;return null!==(o=null===(r=(null!==(n=a[s])&&void 0!==n?n:a[t.defaultLang]).i18n)||void 0===r?void 0:r[e])&&void 0!==o?o:""},cards:(e,n)=>{var r,o;const i=(null!==(r=a[s])&&void 0!==r?r:a[t.defaultLang]).cards,l=null==i?void 0:i[e];return null!==(o=null==l?void 0:l[n])&&void 0!==o?o:""}}},e)},p=e=>e&&e.charAt(0).toUpperCase()+e.slice(1)},7584:(e,a,n)=>{"use strict";n.r(a),n.d(a,{cardsI18n:()=>r});const r=[{name:"Brick Shortage",desc:"All players lose 8 bricks"},{name:"Lucky Cache",desc:"+2 Bricks. +2 Gems. Play again"},{name:"Friendly Terrain",desc:"+1 Wall. Play again"},{name:"Miners",desc:"+1 Quarry"},{name:"Mother Lode",desc:"If quarry < enemy quarry, +2 quarry. Else, +1 quarry"},{name:"Dwarven Miners",desc:"+4 Wall. +1 Quarry"},{name:"Work Overtime",desc:"+5 Wall. You lose 6 gems"},{name:"Copping the Tech",desc:"If quarry < enemy quarry, quarry = enemy quarry"},{name:"Basic Wall",desc:"+3 Wall"},{name:"Sturdy Wall",desc:"+4 Wall"},{name:"Innovations",desc:"+1 To all player's quarrys, you gain 4 gems"},{name:"Foundations",desc:"If wall = 0, +6 wall, else +3 wall"},{name:"Tremors",desc:"All walls take 5 damage. Play again"},{name:"Secret Room",desc:"+1 Magic. Play again"},{name:"Earthquake",desc:"-1 To all player's quarrys"},{name:"Big Wall",desc:"+6 Wall"},{name:"Collapse!",desc:"-1 Enemy quarry"},{name:"New Equipment",desc:"+2 Quarry"},{name:"Strip Mine",desc:"-1 Quarry. +10 Wall. You gain 5 gems"},{name:"Reinforced Wall",desc:"+8 Wall"},{name:"Porticulus",desc:"+5 Wall, +1 dungeon"},{name:"Crystal Rocks",desc:"+7 Wall, gain 7 gems"},{name:"Harmonic Ore",desc:"+6 Wall, +3 tower"},{name:"Mondo Wall",desc:"+12 Wall"},{name:"Focused Designs",desc:"+8 Wall, +5 tower"},{name:"Great Wall",desc:"+15 Wall"},{name:"Rock Launcher",desc:"+6 Wall. 10 Damage to enemy"},{name:"Dragon's Heart",desc:"+20 Wall. +8 Tower"},{name:"Forced Labor",desc:"+9 Wall, lose 5 recruits"},{name:"Rock Garden",desc:"+1 Wall. +1 Tower. +2 Recruits"},{name:"Flood Water",desc:"Player(s) w/lowest wall are -1 Dungeon and 2 damage to tower"},{name:"Barracks",desc:"+6 Recruits, +6 wall. If dungeon < enemy dungeon, +1 dungeon"},{name:"Battlements",desc:"+7 Wall, 6 damage to enemy"},{name:"Shift",desc:"Switch your wall with enemy wall"},{name:"Quartz",desc:"+1 Tower. Play again"},{name:"Smoky Quartz",desc:"1 Damage to enemy tower. Play again"},{name:"Amethyst",desc:"+3 Tower"},{name:"Spell Weavers",desc:"+1 Magic"},{name:"Prism",desc:"Draw 1 card. Discard 1 card. Play again"},{name:"Lodestone",desc:"+3 Tower. This card can't be discarded without playing it"},{name:"Solar Flare",desc:"+2 Tower. 2 Damage to enemy tower"},{name:"Crystal Matrix",desc:"+1 Magic. +3 Tower. +1 Enemy tower"},{name:"Gemstone Flaw",desc:"3 Damage to enemy tower"},{name:"Ruby",desc:"+5 Tower"},{name:"Gem Spear",desc:"5 Damage to enemy tower"},{name:"Power Burn",desc:"5 Damage to your tower. +2 Magic"},{name:"Harmonic Vibe",desc:"+1 Magic. +3 Tower. +3 Wall"},{name:"Parity",desc:"All player's magic equals the highest player's magic"},{name:"Emerald",desc:"+8 Tower"},{name:"Pearl of Wisdom",desc:"+5 Tower. +1 Magic"},{name:"Shatterer",desc:"-1 Magic. 9 Damage to enemy tower"},{name:"Crumblestone",desc:"+5 Tower. Enemy loses 6 bricks"},{name:"Sapphire",desc:"+11 Tower"},{name:"Discord",desc:"7 Damage to all towers, all players magic -1"},{name:"Fire Ruby",desc:"+6 Tower. 4 Damage to enemy tower"},{name:"Quarry's Help",desc:"+7 Tower. Lose 10 bricks"},{name:"Crystal Shield",desc:"+8 Tower. +3 Wall"},{name:"Empathy Gem",desc:"+8 Tower. +1 Dungeon"},{name:"Diamond",desc:"+15 Tower"},{name:"Sanctuary",desc:"+10 Tower. +5 Wall, gain 5 recruits"},{name:"Lava Jewel",desc:"+12 Tower. 6 Damage to enemy"},{name:"Dragon's Eye",desc:"+20 Tower"},{name:"Crystallize",desc:"+11 Tower. -6 Wall"},{name:"Bag of Baubles",desc:"If tower < enemy tower, +2 tower. Else +1 tower"},{name:"Rainbow",desc:"+1 Tower to all players. You gain 3 gems"},{name:"Apprentice",desc:"+4 Tower, you lose 3 recruits, 2 damage to enemy tower"},{name:"Lightning Shard",desc:"If Tower > enemy wall, 8 damage to enemy tower. Else 8 damage"},{name:"Phase Jewel",desc:"+13 Tower. +6 Recruits. +6 Bricks"},{name:"Mad Cow Disease",desc:"All players lose 6 recruits"},{name:"Faerie",desc:"2 Damage. Play again"},{name:"Moody Goblins",desc:"4 Damage. You lose 3 gems"},{name:"Minotaur",desc:"+1 Dungeon"},{name:"Elven Scout",desc:"Draw 1 card. Discard 1 card. Play again"},{name:"Goblin Mob",desc:"6 Damage. You take 3 damage"},{name:"Goblin Archers",desc:"3 Damage to enemy tower. You take 1 damage"},{name:"Shadow Faerie",desc:"2 Damage to enemy tower. Play again"},{name:"Orc",desc:"5 Damage"},{name:"Dwarves",desc:"4 Damage. +3 Wall"},{name:"Little Snakes",desc:"4 Damage to enemy tower"},{name:"Troll Trainer",desc:"+2 Dungeon"},{name:"Tower Gremlin",desc:"2 Damage. +4 Tower. +2 Wall"},{name:"Full Moon",desc:"+1 to all player's dungeon. You gain 3 recruits"},{name:"Slasher",desc:"6 Damage"},{name:"Ogre",desc:"7 Damage"},{name:"Rabid Sheep",desc:"6 Damage. Enemy loses 3 recruits"},{name:"Imp",desc:"6 Damage. All players lose 5 bricks, gems and recruits"},{name:"Spizzer",desc:"If enemy wall = 0, 10 damage, else 6 damage"},{name:"Werewolf",desc:"9 Damage"},{name:"Corrosion Cloud",desc:"If enemy wall > 0, 10 damage, else 7 damage"},{name:"Unicorn",desc:"If magic > enemy magic, 12 damage, else 8 damage"},{name:"Elven Archers",desc:"If wall > enemy wall, 6 damage to enemy tower, else 6 damage"},{name:"Succubus",desc:"5 Damage to enemy tower, enemy loses 8 recruits"},{name:"Rock Stompers",desc:"8 Damage, -1 enemy quarry"},{name:"Thief",desc:"Enemy loses 10 gems, 5 bricks, you gain 1/2 amt. round up"},{name:"Stone Giant",desc:"10 Damage. +4 Wall"},{name:"Vampire",desc:"10 Damage. Enemy loses 5 recruits, -1 enemy dungeon"},{name:"Dragon",desc:"20 Damage. Enemy loses 10 gems, -1 enemy dungeon"},{name:"Spearman",desc:"If wall > enemy wall do 3 damage else do 2 damage"},{name:"Gnome",desc:"3 Damage. +1 Gem"},{name:"Berserker",desc:"8 Damage. 3 Damage to your tower"},{name:"Warlord",desc:"13 Damage. You lose 3 gems"},{name:"Pegasus Lancer",desc:"12 Damage to enemy tower"}]},4378:(e,a,n)=>{"use strict";n.r(a),n.d(a,{i18n:()=>r});const r={tower:"tower",wall:"wall",resource:"resource",bricks:"bricks",gems:"gems",recruits:"recruits",quarry:"quarry",magic:"magic",dungeon:"dungeon",discarded:"discarded","Discard a card":"Discard a card","You Win!":"You Win!","You Lose!":"You Lose!","Tie Game":"Tie Game",Preferences:"Preferences","Your Name:":"Your Name:","Opponent's Name:":"Opponent's Name:","Choose a Tavern (Preset Preferences):":"Choose a Tavern (Preset Preferences):",Default:"Default",Customized:"Customized","Starting Conditions":"Starting Conditions","Victory Conditions":"Victory Conditions","Other Preferences":"Other Preferences","Cards in Hand":"Cards in Hand","AI Type":"AI Type","Apply & New Game":"Apply & New Game",Cancel:"Cancel",Language:"Language",Volume:"Volume",Mute:"Mute",Help:"Help","Toggle Full Screen":"Toggle Full Screen",ERATHIAN:"Use Erathian [%s] (for latin letters only)","ArcoMage HD":"ArcoMage HD",DESC:"Web-based open source HD clone of 3DO and NWC's 2000 card game Arcomage","Please go to %s to view more information, star the repo and follow %s there.":"Please go to %s to view more information, star the repo and follow %s there.","the GitHub project page":"the GitHub project page","Below is a brief presentation of the rules:":"Below is a brief presentation of the rules:",GAMERULES:"Victory conditions vary per tavern. Build your tower, destroy your opponent's tower, or collect enough resources before your opponent does.\n  Large yellow numbers in column are the productions. This is how many new units of a particular resource you will receive on your next turn. Small black numbers in column are the resources. This is how many units you have available to spend on your current turn.\n  Cards: Each have their own cost to play, indicated in a small circle in the lower right corner of the card. The cost will be deducted from your resources according to the color of the card. Left click on a card plays the card. Right click on a card to discard without playing.\n  Red represents your Quarry Generator which produces your Brick resources, blue represents your Magic Generator which produces Gem resources, green represents your Dungeon generator which produces Recruit resources."}},8199:(e,a,n)=>{"use strict";n.r(a),n.d(a,{langs:()=>r,defaultLang:()=>o});const r={en:"English",fr:"Français",de:"Deutsch","zh-Hans":"简体中文","zh-Hant":"繁體中文"},o="en"},2282:(e,a,n)=>{var r={"./I18nContext":[4983],"./I18nContext.tsx":[4983],"./cards.de":[2341,969],"./cards.de.ts":[2341,969],"./cards.en":[7584],"./cards.en.ts":[7584],"./cards.fr":[8503,728],"./cards.fr.ts":[8503,728],"./cards.zh-Hans":[9495,989],"./cards.zh-Hans.ts":[9495,989],"./cards.zh-Hant":[3987,768],"./cards.zh-Hant.ts":[3987,768],"./de":[393,243],"./de.ts":[393,243],"./en":[4378],"./en.ts":[4378],"./fr":[3310,189],"./fr.ts":[3310,189],"./langs":[8199],"./langs.ts":[8199],"./types":[3847,85],"./types.ts":[3847,85],"./zh-Hans":[5842,783],"./zh-Hans.ts":[5842,783],"./zh-Hant":[2540,990],"./zh-Hant.ts":[2540,990]};function o(e){if(!n.o(r,e))return Promise.resolve().then((()=>{var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}));var a=r[e],o=a[0];return Promise.all(a.slice(1).map(n.e)).then((()=>n(o)))}o.keys=()=>Object.keys(r),o.id=2282,e.exports=o},1838:(e,a,n)=>{var r={"./cards.de":[2341,969],"./cards.de.ts":[2341,969],"./cards.en":[7584],"./cards.en.ts":[7584],"./cards.fr":[8503,728],"./cards.fr.ts":[8503,728],"./cards.zh-Hans":[9495,989],"./cards.zh-Hans.ts":[9495,989],"./cards.zh-Hant":[3987,768],"./cards.zh-Hant.ts":[3987,768]};function o(e){if(!n.o(r,e))return Promise.resolve().then((()=>{var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}));var a=r[e],o=a[0];return Promise.all(a.slice(1).map(n.e)).then((()=>n(o)))}o.keys=()=>Object.keys(r),o.id=1838,e.exports=o}}]);